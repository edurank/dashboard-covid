<!-- Tela para o monitoramento com a câmera -->
<!DOCTYPE html>
<html>
<head>

  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>EPI Vision</title>

  <script>
    function startTime() {
      var today = new Date();
      var h = today.getHours();
      var m = today.getMinutes();
      var s = today.getSeconds();
      m = checkTime(m);
      s = checkTime(s);
      document.getElementById('idHora').innerHTML = h + ":" + m + ":" + s;
      var t = setTimeout(startTime, 1000);
    }

    function checkTime(i) {
      if (i < 10) {i = "0" + i};  // add zero in front of numbers < 10
      return i;
    }

    function registrarAviso() {
      //alert("teste");
    }
  </script>

  <style>  
    #webcam-camera {
      margin-left: 20px;
    }

    #comsemMask {
      color:white;
      font-size: 30px;
    }

    #idHora {
      color: white;
      font-size: 50px;
    }

    th {
     color:white;
     font-size: 20px;
    }

    td {
      color:white;
     font-size: 20px;
    }

    #botaoIniciar, #botaoParar {
      padding: 15px;
      width: 10%;
    }

    #encontrou {
      font-size: 10px;
    }

    .botoze {
      margin-left: 20%;
    }

    .ar-botao-dois {
      display: inline;
      border: 1px solid white;
    }
    

    .grid-container {
      padding: 20px;
      display: grid;
      grid-auto-columns: 1fr; 
      grid-template-columns: 0.6fr 1.7fr; 
      grid-template-rows: 0.3fr 1.8fr 1.5fr; 
      gap: 10px 30px;
      grid-auto-flow: row;
      grid-template-areas:
        "ar-titulo ar-titulo"
        "ar-tabela ar-camera"
        "ar-botao ar-botao";
    }

    .ar-titulo { grid-area: ar-titulo; }

    .ar-tabela { grid-area: ar-tabela; }

    .ar-botao { grid-area: ar-botao; height: 150px; }

    .ar-camera { grid-area: ar-camera; }
    .tabella {
      padding: 20px;
      margin-top: 20px;
    }

    .custom-select {
      position: relative;
      font-family: Arial;
    }

    .custom-select select {
      display: none; 
    }

    .select-selected {
      background-color: DodgerBlue;
    }

 
    .select-selected:after {
      position: absolute;
      content: "";
      top: 14px;
      right: 10px;
      width: 0;
      height: 0;
      border: 6px solid transparent;
      border-color: #fff transparent transparent transparent;
    }


    .select-selected.select-arrow-active:after {
      border-color: transparent transparent #fff transparent;
      top: 7px;
    }


    .select-items div,.select-selected {
      color: #ffffff;
      padding: 8px 16px;
      border: 1px solid transparent;
      border-color: transparent transparent rgba(0, 0, 0, 0.1) transparent;
      cursor: pointer;
    }

    .select-items {
      position: absolute;
      background-color: DodgerBlue;
      top: 100%;
      left: 0;
      right: 0;
      z-index: 99;
    }

    .select-hide {
      display: none;
    }

    .select-items div:hover, .same-as-selected {
      background-color: rgba(0, 0, 0, 0.1);
    }
  </style>

  <script type="text/javascript" src="https://unpkg.com/webcam-easy/dist/webcam-easy.min.js"></script>


  <script type="text/javascript">

    const URL = "https://teachablemachine.withgoogle.com/models/ZTFzIfo4P/";

    // meu antigo"https://teachablemachine.withgoogle.com/models/PI5WkIKYD/"
    //https://teachablemachine.withgoogle.com/models/ZTFzIfo4P/

    let model, webcam, labelContainer, maxPredictions, tempo;

    let comMask = "Com mascara";
    let semMask = "Sem mascara";


    let esperando = true;

    let executado = 0;

    async function initw() {
      botoess();
      const modelURL = URL + "model.json";
      const metadataURL = URL + "metadata.json";

      model = await tmImage.load(modelURL, metadataURL);
      maxPredictions = model.getTotalClasses();

      const flip = true;
      webcam = new tmImage.Webcam(1152, 720, flip);
      //const webelement = document.getElementById("webcamcam");
      //webcam = new Webcam(webelement, 'user');

      //webcam.start();

      await webcam.setup();
      await webcam.play();
      window.requestAnimationFrame(loop);

      document.getElementById("webcam-container").appendChild(webcam.canvas);

      labelContainer = document.getElementById("label-container");

      for (let i = 0; i < maxPredictions; i++) {
        labelContainer.appendChild(document.createElement("div"));
      }
    }

    async function botoess() {
      $(document).ready(function() {
        $("#botaoIniciar").hide();        
        $("#botaoParar").show();        
      });
    }
    async function botoesa() {
      $(document).ready(function() {
        $("#botaoIniciar").show();        
        $("#botaoParar").hide();        
      });
    }

    async function loop() {
      webcam.update(); 
      await predict();
      window.requestAnimationFrame(loop);
    }

    async function camStop() {
      botoesa();
      await webcam.stop();
      var list =  document.getElementById("webcam-container");
      list.removeChild(list.childNodes[0]);
    }

    async function registrarAviso() {
      console.log("test");

      $(document).ready(function() {
        $("#encontrou").show();        
      });

      registrar();

      setTimeout(function () {
        $(document).ready(function() {
          $("#encontrou").hide();        
        }); 
      }, 3000);
    }

    function registrar (){
      executado = 1;
    }

    function showDiv(){
      $(document).ready(function() {
        $("#encontrou").hide(); 
      });
    }

    async function predict() {
      const prediction = await model.predict(webcam.canvas);

      for (let i = 0; i < maxPredictions; i++) {
        const classPrediction = prediction[i].className + ": " + prediction[i].probability.toFixed(2);

        if(prediction[i].className == semMask && prediction[i].probability.toFixed(2) >= 0.80) {
          if(!esperando) {
            esperando = true;
            tempo = setTimeout(function() { registrarAviso(); esperando = false; }, 3000);
          }

          $(document).ready(function() {
            $("#comsemMask").css("background-color","#a60013");
            $('#comsemMask').text('Sem máscara');
          });
        } else if(prediction[i].className == comMask && prediction[i].probability.toFixed(2) >= 0.80) {
          clearTimeout(tempo);
          esperando = false;
          $(document).ready(function() {
            $("#comsemMask").css("background-color","blue");
            $("#comsemMask").text('Com máscara');
          });
        } else if(prediction[i].className == "nao-detectado" && prediction[i].probability.toFixed(2) >= 0.80) {
          clearTimeout(tempo);
          esperando = false;
          $(document).ready(function() {
            $("#comsemMask").css("background-color","blue");
            $("#comsemMask").text('Nada detectado');
          });
        }
      }
    }
  </script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.3.1/dist/tf.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@teachablemachine/image@0.8/dist/teachablemachine-image.min.js"></script>


  <!-- Custom fonts for this template-->
  <link href="./vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
  <link
  href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
  rel="stylesheet">
  <link rel="shortcut icon" href="./vendor/fontawesome-free/svgs/solid/eye.svg">
  <link rel="shortcut icon" href="./vendor/fontawesome-free/svgs/solid/address-book.svg">
  <!-- Custom styles for this template-->
  <link href="./css/sb-admin-2.css" rel="stylesheet">
</head>
<body onload="startTime()">
  <div id="wrapper">
    <!-- Sidebar -->
    <%- include('../partials/sidebar'); %>
    <div id="content-wrapper">
      <!-- Main Content -->
      <div id="content">
        <!-- Begin Page Content -->
        <div class="grid-container">
          
          <!-- Content Row -->
          <div class="ar-titulo card shadow mb-4">
            <h1 class="m-0 font-weight-bold text-light" style="text-align:center;padding-top:30px;">Monitoramento</h1>
                      
            <div class="card bg-danger mb-3" id="encontrou" style="display:none;font-size:30px;color:white;">
              <a href="/addAviso" style="text-decoration: none; color:white">Funcionário sem máscara detectado!</a>
            </div>
          </div> <!-- row -->

          <div class="ar-tabela card shadow mb-4">
            <table class="tabella">
              <tr>
                <td>Status</td>
                <td id="comsemMask">Nada detectado</td>
              </tr>
              <tr>
                <td>Horário</td>
                <td id="idHora" style="font-size:30px;"></td>
              </tr>
              <tr>
                <td>Local</td>
                <td>
                <select class="custom-select" aria-label=".form-select-lg example">
                    <option selected>Local...</option>
                  <% departamento.forEach(function (dep) { %>
                    <option value="1"><%= dep.departamento_nome  %></option>
                  <% }); %>
                </select>
                <td>
              </tr>
            </table>

          </div>

          <div class="ar-camera card shadow mb-4"">
            <!--  SCRIPT TEACHABLE MACHINE -->
            <!-- <div id="webcam-container"><video id="webcamcam" width="1152" height="720"></video></div> -->
            <div id="webcam-container" style="height:730px;width:1162px;border-color: white;border-style: solid;"></div>
          </div> <!-- row -->

          <div class="ar-botao card shadow mb-4">
            <div class="container-fluid">
              <div class="row">
                <div class="elem-test col-sm-1">
                  <i class="fas fa-camera fa-2x"></i>
                </div>
                <div class="elem-test col-sm-2" style="margin-left:-50px;">
                  <select class="custom-select" aria-label=".form-select-lg example">
                    <option selected>Selecione o dispositivo...</option>
                    <option value="1">Webcam 1</option>
                    <option value="2">Webcam 2</option>
                  </select>
                </div>
                <div class="elem-test col-sm-4">
                  <div class="botoze">
                    <button type="button" class="btn btn-success btn-lg" id="botaoIniciar" onclick="initw()" style="margin:0;width:300px;">Iniciar</button>
                    <button type="button" class="btn btn-danger btn-lg" id="botaoParar" style="display:none;width:300px;" onclick="camStop()">Parar</button>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <script>showDiv()</script>
        </div> <!-- /.container-fluid -->
      </div> <!-- content -->
    </div> <!-- content-wrapper -->
  </div> <!-- wrapper -->
  <script src="./vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
</body>
</html>